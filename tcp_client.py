import socket

while True:

    while True:

        target_host = "192.168.100.11"
        target_port = 9100
        serial_number = 'VNF4R27155'

        print("""
–ö–æ–º–ø–∞–Ω–∏—è "–ú–∞—Å—Ç–µ—Ä –°–µ—Ä–≤–∏—Å" (https://masservice.ru/) –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç:
–£—Ç–∏–ª–∏—Ç—É –¥–ª—è —Å–º–µ–Ω—ã —Å–µ—Ä–∏–π–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö Hewlett-Packard
–û–±–Ω–æ–≤–ª—è–µ–º—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ https://disk.yandex.ru/d/SB8KCzflBCmlUA
–î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–∏—à–∏—Ç–µ –Ω–∞ p13p@yandex.ru
        
        """)
        new_host = input('–í–≤–µ–¥–∏—Ç–µ ip –ø—Ä–∏–Ω—Ç–µ—Ä–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (ENTER) ip = 192.168.100.11\n')
        if new_host:
            target_host = new_host
        new_sn = input('–í–≤–µ–¥–∏—Ç–µ —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä –ø—Ä–∏–Ω—Ç–µ—Ä–∞, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (ENTER) VNF4R27155\n')

        if new_sn:
            serial_number = new_sn.upper()
        print(f"""
–û—Ç–ø—Ä–∞–≤–∫–∞ {serial_number} –Ω–∞ —Ö–æ—Å—Ç {target_host} - 
–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å (Enter) –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –∑–∞–Ω–æ–≤–æ (–ª—é–±–æ–π —Å–∏–º–≤–æ–ª –∏ Enter)
        """)
        if not input():
            break

    job = [
        bytes('%-12345X@PJL\r\n', 'UTF-8'),
        # bytes('%-12345X@PJL RDYMSG DISPLAY="HACKED"\r\n', 'UTF-8'),
        bytes('@PJL SET SERVICEMODE=HPBOISEID\r\n', 'UTF-8'),
        bytes('@PJL SET SERIALNUMBER=', 'ASCII') + bytes(serial_number, 'ASCII') + bytes('\r\n', 'UTF-8'),
        bytes('@PJL SET SERVICEMODE=EXIT\r\n', 'UTF-8'),
        # bytes('@PJL RESET\r\n', 'UTF-8'),
        bytes('%-12345X', 'UTF-8')
    ]

    soc = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    try:
        soc.connect((target_host, target_port))
    except socket.error:
        print(f"""
–ù–µ—É–¥–∞—á–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Ö–æ—Å—Ç–æ–º {target_host}
        """)
    except TimeoutError:
        print(f"""
–ù–µ—É–¥–∞—á–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Ö–æ—Å—Ç–æ–º {target_host}
–ü—Ä–æ–≤–µ—Ä—å—Ç–µ ip –∞–¥—Ä–µ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ –µ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
        """)
    else:
        for b in job:
            soc.sendall(b)
        print(f"""
–ù–æ–≤—ã–π —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä {serial_number} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Ö–æ—Å—Ç {target_host}
–ï—Å–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç PGL –∫–æ–º–∞–Ω–¥—É SET SERIALNUMBER, —Å–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä –∏–∑–º–µ–Ω—ë–Ω
            """)
    finally:
        soc.close()

    print(f"""
–ó–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–±–æ—Ç—É (Enter) –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å (–ª—é–±–æ–π —Å–∏–º–≤–æ–ª –∏ Enter)
    """)
    if not input():
        break
